/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var github_com_gogo_protobuf_gogoproto_gogo_pb = require('../../../../../../github.com/gogo/protobuf/gogoproto/gogo_pb.js');
var github_com_elojah_game_02_pkg_space_dto_tile_pb = require('../../../../../../github.com/elojah/game_02/pkg/space/dto/tile_pb.js');
var github_com_elojah_game_02_pkg_account_dto_account_pb = require('../../../../../../github.com/elojah/game_02/pkg/account/dto/account_pb.js');
var github_com_elojah_game_02_pkg_geometry_geometry_pb = require('../../../../../../github.com/elojah/game_02/pkg/geometry/geometry_pb.js');
goog.exportSymbol('proto.dto.Connect', null, global);
goog.exportSymbol('proto.dto.Create', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dto.Connect = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dto.Connect, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dto.Connect.displayName = 'proto.dto.Connect';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dto.Connect.prototype.toObject = function(opt_includeInstance) {
  return proto.dto.Connect.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dto.Connect} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dto.Connect.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && github_com_elojah_game_02_pkg_account_dto_account_pb.Auth.toObject(includeInstance, f),
    id: msg.getId_asB64(),
    password: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dto.Connect}
 */
proto.dto.Connect.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dto.Connect;
  return proto.dto.Connect.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dto.Connect} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dto.Connect}
 */
proto.dto.Connect.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_elojah_game_02_pkg_account_dto_account_pb.Auth;
      reader.readMessage(value,github_com_elojah_game_02_pkg_account_dto_account_pb.Auth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dto.Connect.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dto.Connect.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dto.Connect} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dto.Connect.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_elojah_game_02_pkg_account_dto_account_pb.Auth.serializeBinaryToWriter
    );
  }
  f = message.getId_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional Auth Auth = 1;
 * @return {?proto.dto.Auth}
 */
proto.dto.Connect.prototype.getAuth = function() {
  return /** @type{?proto.dto.Auth} */ (
    jspb.Message.getWrapperField(this, github_com_elojah_game_02_pkg_account_dto_account_pb.Auth, 1));
};


/** @param {?proto.dto.Auth|undefined} value */
proto.dto.Connect.prototype.setAuth = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dto.Connect.prototype.clearAuth = function() {
  this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dto.Connect.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes ID = 2;
 * @return {!(string|Uint8Array)}
 */
proto.dto.Connect.prototype.getId = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes ID = 2;
 * This is a type-conversion wrapper around `getId()`
 * @return {string}
 */
proto.dto.Connect.prototype.getId_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getId()));
};


/**
 * optional bytes ID = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getId()`
 * @return {!Uint8Array}
 */
proto.dto.Connect.prototype.getId_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getId()));
};


/** @param {!(string|Uint8Array)} value */
proto.dto.Connect.prototype.setId = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string Password = 3;
 * @return {string}
 */
proto.dto.Connect.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.dto.Connect.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dto.Create = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dto.Create, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dto.Create.displayName = 'proto.dto.Create';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dto.Create.prototype.toObject = function(opt_includeInstance) {
  return proto.dto.Create.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dto.Create} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dto.Create.toObject = function(includeInstance, msg) {
  var f, obj = {
    auth: (f = msg.getAuth()) && github_com_elojah_game_02_pkg_account_dto_account_pb.Auth.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    password: jspb.Message.getFieldWithDefault(msg, 3, ""),
    map: (f = msg.getMap()) && github_com_elojah_game_02_pkg_space_dto_tile_pb.CreateMap.toObject(includeInstance, f),
    sectordimensions: (f = msg.getSectordimensions()) && github_com_elojah_game_02_pkg_geometry_geometry_pb.Vec3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dto.Create}
 */
proto.dto.Create.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dto.Create;
  return proto.dto.Create.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dto.Create} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dto.Create}
 */
proto.dto.Create.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new github_com_elojah_game_02_pkg_account_dto_account_pb.Auth;
      reader.readMessage(value,github_com_elojah_game_02_pkg_account_dto_account_pb.Auth.deserializeBinaryFromReader);
      msg.setAuth(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    case 4:
      var value = new github_com_elojah_game_02_pkg_space_dto_tile_pb.CreateMap;
      reader.readMessage(value,github_com_elojah_game_02_pkg_space_dto_tile_pb.CreateMap.deserializeBinaryFromReader);
      msg.setMap(value);
      break;
    case 5:
      var value = new github_com_elojah_game_02_pkg_geometry_geometry_pb.Vec3;
      reader.readMessage(value,github_com_elojah_game_02_pkg_geometry_geometry_pb.Vec3.deserializeBinaryFromReader);
      msg.setSectordimensions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dto.Create.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.dto.Create.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.dto.Create} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.dto.Create.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAuth();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      github_com_elojah_game_02_pkg_account_dto_account_pb.Auth.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMap();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      github_com_elojah_game_02_pkg_space_dto_tile_pb.CreateMap.serializeBinaryToWriter
    );
  }
  f = message.getSectordimensions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      github_com_elojah_game_02_pkg_geometry_geometry_pb.Vec3.serializeBinaryToWriter
    );
  }
};


/**
 * optional Auth Auth = 1;
 * @return {?proto.dto.Auth}
 */
proto.dto.Create.prototype.getAuth = function() {
  return /** @type{?proto.dto.Auth} */ (
    jspb.Message.getWrapperField(this, github_com_elojah_game_02_pkg_account_dto_account_pb.Auth, 1));
};


/** @param {?proto.dto.Auth|undefined} value */
proto.dto.Create.prototype.setAuth = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.dto.Create.prototype.clearAuth = function() {
  this.setAuth(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dto.Create.prototype.hasAuth = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.dto.Create.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.dto.Create.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string Password = 3;
 * @return {string}
 */
proto.dto.Create.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.dto.Create.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional CreateMap Map = 4;
 * @return {?proto.dto.CreateMap}
 */
proto.dto.Create.prototype.getMap = function() {
  return /** @type{?proto.dto.CreateMap} */ (
    jspb.Message.getWrapperField(this, github_com_elojah_game_02_pkg_space_dto_tile_pb.CreateMap, 4));
};


/** @param {?proto.dto.CreateMap|undefined} value */
proto.dto.Create.prototype.setMap = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.dto.Create.prototype.clearMap = function() {
  this.setMap(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dto.Create.prototype.hasMap = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional geometry.Vec3 SectorDimensions = 5;
 * @return {?proto.geometry.Vec3}
 */
proto.dto.Create.prototype.getSectordimensions = function() {
  return /** @type{?proto.geometry.Vec3} */ (
    jspb.Message.getWrapperField(this, github_com_elojah_game_02_pkg_geometry_geometry_pb.Vec3, 5));
};


/** @param {?proto.geometry.Vec3|undefined} value */
proto.dto.Create.prototype.setSectordimensions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.dto.Create.prototype.clearSectordimensions = function() {
  this.setSectordimensions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.dto.Create.prototype.hasSectordimensions = function() {
  return jspb.Message.getField(this, 5) != null;
};


goog.object.extend(exports, proto.dto);
