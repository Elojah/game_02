syntax = "proto3";

package grpc;

option (gogoproto.testgen_all)  = true;
option (gogoproto.benchgen_all) = true;
option (gogoproto.populate_all) = true;
option (gogoproto.goproto_registration) = true;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "google/protobuf/empty.proto";

import "github.com/elojah/game_02/pkg/lobby/lobby.proto";
import "github.com/elojah/game_02/pkg/player/player.proto";
import "github.com/elojah/game_02/pkg/room/room.proto";
import "github.com/elojah/game_02/pkg/account/dto/account.proto";
import "github.com/elojah/game_02/pkg/room/dto/room.proto";
import "github.com/elojah/game_02/pkg/player/dto/player.proto";

service Auth {
    rpc Subscribe(dto.Subscribe) returns (google.protobuf.Empty);
    rpc Unsubscribe(dto.Auth) returns (google.protobuf.Empty);

    rpc Signin(dto.Signin) returns (dto.Auth);
    rpc Signout(dto.Auth) returns (google.protobuf.Empty);

    rpc CreateLobby(dto.Auth) returns (lobby.L);
    rpc ListLobbies(dto.Auth) returns (stream lobby.L);

    rpc CreateRoom(dto.CreateRoom) returns (room.R);
    rpc ConnectRoom(dto.ConnectRoom) returns (room.R);

    rpc CreatePlayer(dto.CreatePlayer) returns (player.P);
}